import { ComponentRenderFuncProps } from './typings/app';
import { LmAccordion } from './components/accordion/Accordion';
import { LmTable } from './components/table/Table';
import { LmDivider } from './components/divider/Divider';
import { LmButtonList } from './components/button-list/ButtonList';
import { LmHeadline } from './components/headline/Headline';
import { LmGridRow } from './components/section/GridRow';
import { LmGridColumn } from './components/section/GridColumn';
import { LmImage } from './components/image/ImageElement';
import { LmHtml } from './components/html/Html';
import { LmImageList } from './components/image-list/ImageList';
import { LmButton } from './components/button/Button';
import { LmNavList } from './components/nav-list/NavList';
import { LmIframe } from './components/iframe/Iframe';
import { LmSlider } from './components/slider/Slider';
import { LmSectionVideo } from './components/section/SectionVideoBg';
import { LmIcon } from './components/icon/Icon';
import { LmCardList } from './components/card/CardList';
import { LmSectionParallax } from './components/section/SectionParallax';
import { LmTabs } from './components/tabs/Tabs';
import { LmFlexRow } from './components/flex-row/FlexRow';
import { LmRichTextParagraph } from './components/paragraph/RichTextParagraph';
import { LmTimeline } from './components/timeline/Timeline';
import { LmAvatar } from './components/avatar/LmAvatar';
import { LmDateHeadline } from './components/headline/DateHeadline';
import { LmMotion } from './components/motion/Motion';
import { LmSection } from './components/section/Section';
import { LmAccordionItem } from './components/accordion/AccordionItem';
import { LmTimelineItem } from './components/timeline/TimelineRow';
import { LmImageListItem } from './components/image-list/ImageListItem';
import { LmPlayer } from './components/player/Player';
export { LmAccordion, LmAvatar, LmButton, LmButtonList, LmCardList, LmDivider, LmFlexRow, LmHeadline, LmDateHeadline, LmHtml, LmIcon, LmIframe, LmImage, LmImageList, LmSection, LmTimeline, LmGridRow, LmGridColumn, LmRichTextParagraph, LmTabs, LmTable, LmSectionParallax, LmSlider, LmNavList, LmSectionVideo, LmMotion, LmAccordionItem, LmImageListItem, LmPlayer, };
export { default as LmStoryblokService } from './utils/StoryblokService';
export { internalLinkHandler } from './utils/linkHandler';
export { default as LmAppProvider } from './components/provider/AppProvider';
export { useAppContext } from './components/provider/context/AppContext';
export { default as LmWindowDimensionProvider } from './components/provider/WindowDimensionsProvider';
export { useWindowDimensions } from './components/provider/context/WindowDimensionContext';
export { default as LmAppSetupProvider } from './components/provider/AppSetupProvider';
export { useAppSetup } from './components/provider/context/AppSetupContext';
export { CONFIG } from './utils/config';
export declare const LmCoreComponentsNamed: {
    table: typeof LmTable;
    accordion: typeof LmAccordion;
    accordion_item: typeof LmAccordionItem;
    divider: typeof LmDivider;
    html: typeof LmHtml;
    button_list: typeof LmButtonList;
    section: typeof LmSection;
    headline: typeof LmHeadline;
    row: typeof LmGridRow;
    column: typeof LmGridColumn;
    image: typeof LmImage;
    image_list: typeof LmImageList;
    image_list_item: typeof LmImageListItem;
    button: typeof LmButton;
    nav_list: typeof LmNavList;
    icon: typeof LmIcon;
    iframe: typeof LmIframe;
    slider: typeof LmSlider;
    section_video_bg: typeof LmSectionVideo;
    card_list: typeof LmCardList;
    section_parallax: typeof LmSectionParallax;
    tabs: typeof LmTabs;
    flex_row: typeof LmFlexRow;
    rich_text_editor: typeof LmRichTextParagraph;
    timeline: typeof LmTimeline;
    timeline_item: typeof LmTimelineItem;
    avatar: typeof LmAvatar;
    date_headline: typeof LmDateHeadline;
    motion: typeof LmMotion;
    player: typeof LmPlayer;
};
export declare function LmComponentRender(props: ComponentRenderFuncProps): JSX.Element;
